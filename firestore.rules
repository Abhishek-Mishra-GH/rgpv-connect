rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read their own profile, anyone can create one upon signup.
    // Profiles can only be updated by their owner.
    match /users/{userId} {
      allow read;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId;
    }

    // Anyone can read questions. Only authenticated users can create them.
    // Voting is allowed by any authenticated user, changing only the 'upvotes' field.
    // The author can update their own question.
    match /questions/{questionId} {
      allow read;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        // Case 1: The user is the author of the question
        (resource.data.author.id == request.auth.uid) ||
        // Case 2: The user is upvoting or downvoting
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['upvotes']) &&
         (request.resource.data.upvotes == resource.data.upvotes + 1 || request.resource.data.upvotes == resource.data.upvotes - 1))
      );
    }
    
    // Anyone can read answers. Only authenticated users can post answers.
    // Voting is allowed by any authenticated user, changing only the 'upvotes' field.
    // The author can update their own answer.
    match /answers/{answerId} {
       allow read;
       allow create: if request.auth != null;
       allow update: if request.auth != null && (
        // Case 1: The user is the author of the answer
        (resource.data.author.id == request.auth.uid) ||
        // Case 2: The user is upvoting or downvoting
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['upvotes']) &&
         (request.resource.data.upvotes == resource.data.upvotes + 1 || request.resource.data.upvotes == resource.data.upvotes - 1))
      );
    }
  }
}
